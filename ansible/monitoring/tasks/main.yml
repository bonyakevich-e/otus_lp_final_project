---
# tasks file for monitoring

- name: Set timezone to Europe/Moscow
  become: yes
  community.general.timezone:
    name: Europe/Moscow

- name: install zabbix repositories
  ansible.builtin.apt:
    deb: https://repo.zabbix.com/zabbix/6.0/ubuntu/pool/main/z/zabbix-release/zabbix-release_6.0-4+ubuntu22.04_all.deb

- name: install zabbix
  ansible.builtin.apt:
    name:
      - zabbix-server-mysql
      - zabbix-frontend-php
      - zabbix-apache-conf
      - zabbix-sql-scripts
      - zabbix-agent
    state: present
    update_cache: true

- name: install mariadb
  ansible.builtin.apt:
    name:
      - mariadb-server
      - mariadb-backup
      - mariadb-client
    state: present
    update_cache: true

- name: Install pip
  ansible.builtin.apt:
    name: python3-pip
    state: present
    update_cache: true

- name: Install PyMySQL
  pip:
    name: pymysql
    state: present

- name: enable mariadb
  ansible.builtin.service:
    name: mariadb
    enabled: true

- name: Check if mysql root password was not set
  shell: >
    mysql -u root
    -h localhost
    -e "quit"
  changed_when: false
  ignore_errors: true
  register: check_passwd_root

- name: Set MariaDB root password
  community.mysql.mysql_user:
    name: root
    password: "{{ mysql_root_password }}"
    login_user: root
    login_unix_socket: "/run/mysqld/mysqld.sock"
    state: present
  when: check_passwd_root.rc == 0

- name: Removes all anonymous user accounts
  community.mysql.mysql_user:
    name: ''
    host_all: true
    state: absent
    login_user: root
    login_password: "{{ mysql_root_password }}"
  notify: flush privileges

- name: Remove test database
  mysql_db:
    login_user: "root"
    login_password: "{{ mysql_root_password }}"
    db: "test"
    state: absent
  notify: flush privileges
 
- name: create zabbix database
  community.mysql.mysql_db:
    name: zabbix
    encoding: utf8mb4
    collation: utf8mb4_bin
    state: present
    login_user: root
    login_password: "{{ mysql_root_password }}"

- name: create zabbix user
  tags: create_zabbix_user
  community.mysql.mysql_user:
    name: "{{ zabbix_user_name }}"
    password: "{{ zabbix_user_password }}"
    priv: 'zabbix.*:ALL'
    host: 'localhost'
    login_user: root
    login_password: "{{ mysql_root_password }}"
    state: present
  notify: flush privileges

- name: set log_bin_trust_function_creators variable
  community.mysql.mysql_variables:
    variable: log_bin_trust_function_creators
    value: 1
    login_user: root
    login_password: "{{ mysql_root_password }}"

- name: unarchive sql file
  ansible.builtin.command: gzip -d /usr/share/zabbix-sql-scripts/mysql/server.sql.gz
  ignore_errors: true

- name: import intial zabbix schema and data
  community.mysql.mysql_db:
    name: "zabbix"
    state: import
    target: /usr/share/zabbix-sql-scripts/mysql/server.sql
    encoding: utf8mb4
    login_user: "{{ zabbix_user_name }}"
    login_password: "{{ zabbix_user_password }}"
  ignore_errors: true

  #  ansible.builtin.shell: 'zcat /usr/share/zabbix-sql-scripts/mysql/server.sql.gz | mysql --default-character-set=utf8mb4 -u{{ zabbix_user_name }} -p{{ zabbix_user_password }}'

- name: unset log_bin_trust_function_creators after importing database schema
  community.mysql.mysql_variables:
    variable: log_bin_trust_function_creators
    value: 0
    login_user: root
    login_password: "{{ mysql_root_password }}"

- name: set dbpassword into zabbix config file
  ansible.builtin.shell: sed -i 's/# DBPassword=/DBPassword={{ zabbix_user_password }}/g' /etc/zabbix/zabbix_server.conf

- name: restart zabbix-server apache2 zabbix-agent
  ansible.builtin.service:
    name: "{{ item }}"
    state: restarted
    enabled: true
  with_items:
    - apache2
    - zabbix-server
    - zabbix-agent

