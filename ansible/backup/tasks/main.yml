---
# tasks file for backup
- name: Set timezone to Europe/Moscow
  become: yes
  community.general.timezone:
    name: Europe/Moscow

- name: install mariadb-client
  ansible.builtin.apt:
    name:
      - mariadb-client
      - mariadb-backup
    state: present
    update_cache: true

- name: Generate an OpenSSH keypair with the default values (4096 bits, rsa)
  community.crypto.openssh_keypair:
    path: /root/.ssh/id_rsa

- name: fetch all public ssh keys
  tags: fetch_backup_ssh_key
  shell: cat ~/.ssh/id_rsa.pub
  register: backup_ssh_key

- name: deploy backup ssh key to webserver1
  tags: deploy_backup_key_to_webserver1
  delegate_to: webserver1
  ansible.posix.authorized_key:
    user: root
    state: present
    key: "{{ backup_ssh_key.stdout }}"
    comment: "backup-server"

- name: deploy backup ssh key to webserver2
  tags: deploy_backup_key_to_webserver2
  delegate_to: webserver2
  ansible.posix.authorized_key:
    user: root
    state: present
    key: "{{ backup_ssh_key.stdout }}"
    comment: "backup-server"

- name: deploy backup ssh key to dbmaster
  tags: deploy_backup_key_to_dbmaster
  delegate_to: dbmaster
  ansible.posix.authorized_key:
    user: root
    state: present
    key: "{{ backup_ssh_key.stdout }}"
    comment: "backup-server"

- name: deploy backup ssh key to storage
  tags: deploy_backup_key_to_storage
  delegate_to: storage
  ansible.posix.authorized_key:
    user: root
    state: present
    key: "{{ backup_ssh_key.stdout }}"
    comment: "backup-server"

- name: deploy backup ssh key to monitoring server
  tags: deploy_backup_key_to_monitoring
  delegate_to: monitoring
  ansible.posix.authorized_key:
    user: root
    state: present
    key: "{{ backup_ssh_key.stdout }}"
    comment: "backup-server"

- name: deploy backup ssh key to logserver
  tags: deploy_backup_key_to_logserver
  delegate_to: logserver
  ansible.posix.authorized_key:
    user: root
    state: present
    key: "{{ backup_ssh_key.stdout }}"
    comment: "backup-server"

- name: create a directories for backup
  ansible.builtin.file:
    path: "/backup/{{ item }}"
    state: directory
    mode: '0755'
    recurse: yes
  with_items:
    - nextcloud
    - zabbix
    - logserver

- name: create a directory for scripts
  ansible.builtin.file:
    path: /opt/scripts
    state: directory
    mode: '0755'
    recurse: yes

- name: copy backup scripts to backup-server
  tags: bac_copy_scripts
  ansible.builtin.template:
    src: "{{ item }}"
    dest: /opt/scripts/
    mode: u=rwx,g=rx,o=r 
  with_items:
    - nextcloud_backup.bash
    - zabbix_backup.bash
    - logs_backup.bash

- name: copy cron tasks to backup-server
  tags: bac_copy_crons
  ansible.builtin.template:
    src: "{{ item }}"
    dest: /etc/cron.d/
    mode: u=rw,g=r,o=r
  with_items:
    - nextcloud_backup
    - zabbix_backup
    - logs_backup

- name: edit rsyslog config
  tags: edit_rsyslog_config
  ansible.builtin.lineinfile:
    path: /etc/rsyslog.conf
    line: "*.* @@192.168.56.70:514"
    state: present
  notify: restart rsyslog

- name: install zabbix-agent
  tags: install_zabbix_agent
  ansible.builtin.apt:
    name: zabbix-agent
    state: present
    update_cache: true

- name: import zabbix-agent config
  tags: install_zabbix_agent
  ansible.builtin.template:
    src: zabbix_agentd.conf.j2
    dest: /etc/zabbix/zabbix_agentd.conf
  notify: restart zabbix-agent
